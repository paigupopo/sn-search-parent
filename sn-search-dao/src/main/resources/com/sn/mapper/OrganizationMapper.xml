<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sn.mapper.OrganizationMapper">
  <resultMap id="BaseResultMap" type="com.sn.pojo.Organization">
    <id column="organizationId" jdbcType="BIGINT" property="organizationid" />
    <result column="uuid_" jdbcType="VARCHAR" property="uuid" />
    <result column="companyId" jdbcType="BIGINT" property="companyid" />
    <result column="userId" jdbcType="BIGINT" property="userid" />
    <result column="userName" jdbcType="VARCHAR" property="username" />
    <result column="createDate" jdbcType="TIMESTAMP" property="createdate" />
    <result column="modifiedDate" jdbcType="TIMESTAMP" property="modifieddate" />
    <result column="parentOrganizationId" jdbcType="BIGINT" property="parentorganizationid" />
    <result column="treePath" jdbcType="VARCHAR" property="treepath" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="type_" jdbcType="VARCHAR" property="type" />
    <result column="recursable" jdbcType="TINYINT" property="recursable" />
    <result column="regionId" jdbcType="BIGINT" property="regionid" />
    <result column="countryId" jdbcType="BIGINT" property="countryid" />
    <result column="statusId" jdbcType="INTEGER" property="statusid" />
    <result column="comments" jdbcType="VARCHAR" property="comments" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    organizationId, uuid_, companyId, userId, userName, createDate, modifiedDate, parentOrganizationId, 
    treePath, name, type_, recursable, regionId, countryId, statusId, comments
  </sql>
  <select id="selectByExample" parameterType="com.sn.pojo.OrganizationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from organization_
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from organization_
    where organizationId = #{organizationid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from organization_
    where organizationId = #{organizationid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.sn.pojo.OrganizationExample">
    delete from organization_
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sn.pojo.Organization">
    insert into organization_ (organizationId, uuid_, companyId, 
      userId, userName, createDate, 
      modifiedDate, parentOrganizationId, treePath, 
      name, type_, recursable, 
      regionId, countryId, statusId, 
      comments)
    values (#{organizationid,jdbcType=BIGINT}, #{uuid,jdbcType=VARCHAR}, #{companyid,jdbcType=BIGINT}, 
      #{userid,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{createdate,jdbcType=TIMESTAMP}, 
      #{modifieddate,jdbcType=TIMESTAMP}, #{parentorganizationid,jdbcType=BIGINT}, #{treepath,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{recursable,jdbcType=TINYINT}, 
      #{regionid,jdbcType=BIGINT}, #{countryid,jdbcType=BIGINT}, #{statusid,jdbcType=INTEGER}, 
      #{comments,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sn.pojo.Organization">
    insert into organization_
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="organizationid != null">
        organizationId,
      </if>
      <if test="uuid != null">
        uuid_,
      </if>
      <if test="companyid != null">
        companyId,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="username != null">
        userName,
      </if>
      <if test="createdate != null">
        createDate,
      </if>
      <if test="modifieddate != null">
        modifiedDate,
      </if>
      <if test="parentorganizationid != null">
        parentOrganizationId,
      </if>
      <if test="treepath != null">
        treePath,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="type != null">
        type_,
      </if>
      <if test="recursable != null">
        recursable,
      </if>
      <if test="regionid != null">
        regionId,
      </if>
      <if test="countryid != null">
        countryId,
      </if>
      <if test="statusid != null">
        statusId,
      </if>
      <if test="comments != null">
        comments,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="organizationid != null">
        #{organizationid,jdbcType=BIGINT},
      </if>
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="companyid != null">
        #{companyid,jdbcType=BIGINT},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null">
        #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifieddate != null">
        #{modifieddate,jdbcType=TIMESTAMP},
      </if>
      <if test="parentorganizationid != null">
        #{parentorganizationid,jdbcType=BIGINT},
      </if>
      <if test="treepath != null">
        #{treepath,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="recursable != null">
        #{recursable,jdbcType=TINYINT},
      </if>
      <if test="regionid != null">
        #{regionid,jdbcType=BIGINT},
      </if>
      <if test="countryid != null">
        #{countryid,jdbcType=BIGINT},
      </if>
      <if test="statusid != null">
        #{statusid,jdbcType=INTEGER},
      </if>
      <if test="comments != null">
        #{comments,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sn.pojo.OrganizationExample" resultType="java.lang.Long">
    select count(*) from organization_
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update organization_
    <set>
      <if test="record.organizationid != null">
        organizationId = #{record.organizationid,jdbcType=BIGINT},
      </if>
      <if test="record.uuid != null">
        uuid_ = #{record.uuid,jdbcType=VARCHAR},
      </if>
      <if test="record.companyid != null">
        companyId = #{record.companyid,jdbcType=BIGINT},
      </if>
      <if test="record.userid != null">
        userId = #{record.userid,jdbcType=BIGINT},
      </if>
      <if test="record.username != null">
        userName = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.createdate != null">
        createDate = #{record.createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifieddate != null">
        modifiedDate = #{record.modifieddate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.parentorganizationid != null">
        parentOrganizationId = #{record.parentorganizationid,jdbcType=BIGINT},
      </if>
      <if test="record.treepath != null">
        treePath = #{record.treepath,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type_ = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.recursable != null">
        recursable = #{record.recursable,jdbcType=TINYINT},
      </if>
      <if test="record.regionid != null">
        regionId = #{record.regionid,jdbcType=BIGINT},
      </if>
      <if test="record.countryid != null">
        countryId = #{record.countryid,jdbcType=BIGINT},
      </if>
      <if test="record.statusid != null">
        statusId = #{record.statusid,jdbcType=INTEGER},
      </if>
      <if test="record.comments != null">
        comments = #{record.comments,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update organization_
    set organizationId = #{record.organizationid,jdbcType=BIGINT},
      uuid_ = #{record.uuid,jdbcType=VARCHAR},
      companyId = #{record.companyid,jdbcType=BIGINT},
      userId = #{record.userid,jdbcType=BIGINT},
      userName = #{record.username,jdbcType=VARCHAR},
      createDate = #{record.createdate,jdbcType=TIMESTAMP},
      modifiedDate = #{record.modifieddate,jdbcType=TIMESTAMP},
      parentOrganizationId = #{record.parentorganizationid,jdbcType=BIGINT},
      treePath = #{record.treepath,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      type_ = #{record.type,jdbcType=VARCHAR},
      recursable = #{record.recursable,jdbcType=TINYINT},
      regionId = #{record.regionid,jdbcType=BIGINT},
      countryId = #{record.countryid,jdbcType=BIGINT},
      statusId = #{record.statusid,jdbcType=INTEGER},
      comments = #{record.comments,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sn.pojo.Organization">
    update organization_
    <set>
      <if test="uuid != null">
        uuid_ = #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="companyid != null">
        companyId = #{companyid,jdbcType=BIGINT},
      </if>
      <if test="userid != null">
        userId = #{userid,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null">
        createDate = #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifieddate != null">
        modifiedDate = #{modifieddate,jdbcType=TIMESTAMP},
      </if>
      <if test="parentorganizationid != null">
        parentOrganizationId = #{parentorganizationid,jdbcType=BIGINT},
      </if>
      <if test="treepath != null">
        treePath = #{treepath,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type_ = #{type,jdbcType=VARCHAR},
      </if>
      <if test="recursable != null">
        recursable = #{recursable,jdbcType=TINYINT},
      </if>
      <if test="regionid != null">
        regionId = #{regionid,jdbcType=BIGINT},
      </if>
      <if test="countryid != null">
        countryId = #{countryid,jdbcType=BIGINT},
      </if>
      <if test="statusid != null">
        statusId = #{statusid,jdbcType=INTEGER},
      </if>
      <if test="comments != null">
        comments = #{comments,jdbcType=VARCHAR},
      </if>
    </set>
    where organizationId = #{organizationid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sn.pojo.Organization">
    update organization_
    set uuid_ = #{uuid,jdbcType=VARCHAR},
      companyId = #{companyid,jdbcType=BIGINT},
      userId = #{userid,jdbcType=BIGINT},
      userName = #{username,jdbcType=VARCHAR},
      createDate = #{createdate,jdbcType=TIMESTAMP},
      modifiedDate = #{modifieddate,jdbcType=TIMESTAMP},
      parentOrganizationId = #{parentorganizationid,jdbcType=BIGINT},
      treePath = #{treepath,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      type_ = #{type,jdbcType=VARCHAR},
      recursable = #{recursable,jdbcType=TINYINT},
      regionId = #{regionid,jdbcType=BIGINT},
      countryId = #{countryid,jdbcType=BIGINT},
      statusId = #{statusid,jdbcType=INTEGER},
      comments = #{comments,jdbcType=VARCHAR}
    where organizationId = #{organizationid,jdbcType=BIGINT}
  </update>
</mapper>